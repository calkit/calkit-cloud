name: Deploy to staging

concurrency: staging

on:
  push:
    branches:
      - master

jobs:
  deploy:
    environment: staging
    runs-on:
      - self-hosted
      - staging
    env:
      ENVIRONMENT: staging
      PROJECT_NAME: ${{ vars.PROJECT_NAME }}
      DOMAIN: ${{ vars.DOMAIN }}
      BACKEND_CORS_ORIGINS: "https://${{ vars.DOMAIN }}"
      STACK_NAME: ${{ vars.STACK_NAME }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      FERNET_KEY: "${{ secrets.FERNET_KEY }}"
      FIRST_SUPERUSER: ${{ vars.FIRST_SUPERUSER }}
      FIRST_SUPERUSER_PASSWORD: ${{ secrets.FIRST_SUPERUSER_PASSWORD }}
      FIRST_SUPERUSER_GITHUB_USERNAME: ${{ vars.FIRST_SUPERUSER_GITHUB_USERNAME }}
      SMTP_HOST: ${{ secrets.SMTP_HOST }}
      SMTP_USER: ${{ secrets.SMTP_USER }}
      SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
      EMAILS_FROM_EMAIL: ${{ vars.EMAILS_FROM_EMAIL }}
      POSTGRES_USER: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: app
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      DOCKER_IMAGE_BACKEND: "backend-${{ vars.STACK_NAME }}"
      DOCKER_IMAGE_FRONTEND: "frontend-${{ vars.STACK_NAME }}"
      GH_CLIENT_ID: ${{ secrets.GH_CLIENT_ID }}
      GH_CLIENT_SECRET: ${{ secrets.GH_CLIENT_SECRET }}
      MINIO_ROOT_PASSWORD: ${{ secrets.MINIO_ROOT_PASSWORD }}
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}
      MIXPANEL_TOKEN: ${{ secrets.MIXPANEL_TOKEN }}
      GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
      ZENODO_CLIENT_ID: ${{ secrets.ZENODO_CLIENT_ID }}
      ZENODO_CLIENT_SECRET: ${{ secrets.ZENODO_CLIENT_SECRET }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - run: docker compose -f docker-compose.yml --project-name ${{ vars.STACK_NAME }} build
      - run: docker compose -f docker-compose.yml --project-name ${{ vars.STACK_NAME }} up -d
