/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ZenodoAuthImport } from './routes/zenodo-auth'
import { Route as ResetPasswordImport } from './routes/reset-password'
import { Route as RecoverPasswordImport } from './routes/recover-password'
import { Route as LoginImport } from './routes/login'
import { Route as CheckoutImport } from './routes/checkout'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutSettingsImport } from './routes/_layout/settings'
import { Route as LayoutProjectsImport } from './routes/_layout/projects'
import { Route as LayoutLearnImport } from './routes/_layout/learn'
import { Route as LayoutDatasetsImport } from './routes/_layout/datasets'
import { Route as LayoutAdminImport } from './routes/_layout/admin'
import { Route as LayoutUserNameProjectNameLayoutImport } from './routes/_layout/$userName/$projectName/_layout'
import { Route as LayoutUserNameProjectNameLayoutIndexImport } from './routes/_layout/$userName/$projectName/_layout/index'
import { Route as LayoutUserNameProjectNameLayoutWorkflowImport } from './routes/_layout/$userName/$projectName/_layout/workflow'
import { Route as LayoutUserNameProjectNameLayoutSoftwareImport } from './routes/_layout/$userName/$projectName/_layout/software'
import { Route as LayoutUserNameProjectNameLayoutReferencesImport } from './routes/_layout/$userName/$projectName/_layout/references'
import { Route as LayoutUserNameProjectNameLayoutPublicationsImport } from './routes/_layout/$userName/$projectName/_layout/publications'
import { Route as LayoutUserNameProjectNameLayoutNotebooksImport } from './routes/_layout/$userName/$projectName/_layout/notebooks'
import { Route as LayoutUserNameProjectNameLayoutLocalImport } from './routes/_layout/$userName/$projectName/_layout/local'
import { Route as LayoutUserNameProjectNameLayoutFilesImport } from './routes/_layout/$userName/$projectName/_layout/files'
import { Route as LayoutUserNameProjectNameLayoutFiguresImport } from './routes/_layout/$userName/$projectName/_layout/figures'
import { Route as LayoutUserNameProjectNameLayoutDatasetsImport } from './routes/_layout/$userName/$projectName/_layout/datasets'
import { Route as LayoutUserNameProjectNameLayoutCollaboratorsImport } from './routes/_layout/$userName/$projectName/_layout/collaborators'

// Create Virtual Routes

const LayoutUserNameProjectNameImport = createFileRoute(
  '/_layout/$userName/$projectName',
)()

// Create/Update Routes

const ZenodoAuthRoute = ZenodoAuthImport.update({
  path: '/zenodo-auth',
  getParentRoute: () => rootRoute,
} as any)

const ResetPasswordRoute = ResetPasswordImport.update({
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const RecoverPasswordRoute = RecoverPasswordImport.update({
  path: '/recover-password',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const CheckoutRoute = CheckoutImport.update({
  path: '/checkout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSettingsRoute = LayoutSettingsImport.update({
  path: '/settings',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutProjectsRoute = LayoutProjectsImport.update({
  path: '/projects',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutLearnRoute = LayoutLearnImport.update({
  path: '/learn',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDatasetsRoute = LayoutDatasetsImport.update({
  path: '/datasets',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAdminRoute = LayoutAdminImport.update({
  path: '/admin',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutUserNameProjectNameRoute = LayoutUserNameProjectNameImport.update({
  path: '/$userName/$projectName',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutUserNameProjectNameLayoutRoute =
  LayoutUserNameProjectNameLayoutImport.update({
    id: '/_layout',
    getParentRoute: () => LayoutUserNameProjectNameRoute,
  } as any)

const LayoutUserNameProjectNameLayoutIndexRoute =
  LayoutUserNameProjectNameLayoutIndexImport.update({
    path: '/',
    getParentRoute: () => LayoutUserNameProjectNameLayoutRoute,
  } as any)

const LayoutUserNameProjectNameLayoutWorkflowRoute =
  LayoutUserNameProjectNameLayoutWorkflowImport.update({
    path: '/workflow',
    getParentRoute: () => LayoutUserNameProjectNameLayoutRoute,
  } as any)

const LayoutUserNameProjectNameLayoutSoftwareRoute =
  LayoutUserNameProjectNameLayoutSoftwareImport.update({
    path: '/software',
    getParentRoute: () => LayoutUserNameProjectNameLayoutRoute,
  } as any)

const LayoutUserNameProjectNameLayoutReferencesRoute =
  LayoutUserNameProjectNameLayoutReferencesImport.update({
    path: '/references',
    getParentRoute: () => LayoutUserNameProjectNameLayoutRoute,
  } as any)

const LayoutUserNameProjectNameLayoutPublicationsRoute =
  LayoutUserNameProjectNameLayoutPublicationsImport.update({
    path: '/publications',
    getParentRoute: () => LayoutUserNameProjectNameLayoutRoute,
  } as any)

const LayoutUserNameProjectNameLayoutNotebooksRoute =
  LayoutUserNameProjectNameLayoutNotebooksImport.update({
    path: '/notebooks',
    getParentRoute: () => LayoutUserNameProjectNameLayoutRoute,
  } as any)

const LayoutUserNameProjectNameLayoutLocalRoute =
  LayoutUserNameProjectNameLayoutLocalImport.update({
    path: '/local',
    getParentRoute: () => LayoutUserNameProjectNameLayoutRoute,
  } as any)

const LayoutUserNameProjectNameLayoutFilesRoute =
  LayoutUserNameProjectNameLayoutFilesImport.update({
    path: '/files',
    getParentRoute: () => LayoutUserNameProjectNameLayoutRoute,
  } as any)

const LayoutUserNameProjectNameLayoutFiguresRoute =
  LayoutUserNameProjectNameLayoutFiguresImport.update({
    path: '/figures',
    getParentRoute: () => LayoutUserNameProjectNameLayoutRoute,
  } as any)

const LayoutUserNameProjectNameLayoutDatasetsRoute =
  LayoutUserNameProjectNameLayoutDatasetsImport.update({
    path: '/datasets',
    getParentRoute: () => LayoutUserNameProjectNameLayoutRoute,
  } as any)

const LayoutUserNameProjectNameLayoutCollaboratorsRoute =
  LayoutUserNameProjectNameLayoutCollaboratorsImport.update({
    path: '/collaborators',
    getParentRoute: () => LayoutUserNameProjectNameLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/checkout': {
      id: '/checkout'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof CheckoutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/recover-password': {
      id: '/recover-password'
      path: '/recover-password'
      fullPath: '/recover-password'
      preLoaderRoute: typeof RecoverPasswordImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/zenodo-auth': {
      id: '/zenodo-auth'
      path: '/zenodo-auth'
      fullPath: '/zenodo-auth'
      preLoaderRoute: typeof ZenodoAuthImport
      parentRoute: typeof rootRoute
    }
    '/_layout/admin': {
      id: '/_layout/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof LayoutAdminImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/datasets': {
      id: '/_layout/datasets'
      path: '/datasets'
      fullPath: '/datasets'
      preLoaderRoute: typeof LayoutDatasetsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/learn': {
      id: '/_layout/learn'
      path: '/learn'
      fullPath: '/learn'
      preLoaderRoute: typeof LayoutLearnImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/projects': {
      id: '/_layout/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof LayoutProjectsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/settings': {
      id: '/_layout/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof LayoutSettingsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/$userName/$projectName': {
      id: '/_layout/$userName/$projectName'
      path: '/$userName/$projectName'
      fullPath: '/$userName/$projectName'
      preLoaderRoute: typeof LayoutUserNameProjectNameImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/$userName/$projectName/_layout': {
      id: '/_layout/$userName/$projectName/_layout'
      path: '/$userName/$projectName'
      fullPath: '/$userName/$projectName'
      preLoaderRoute: typeof LayoutUserNameProjectNameLayoutImport
      parentRoute: typeof LayoutUserNameProjectNameRoute
    }
    '/_layout/$userName/$projectName/_layout/collaborators': {
      id: '/_layout/$userName/$projectName/_layout/collaborators'
      path: '/collaborators'
      fullPath: '/$userName/$projectName/collaborators'
      preLoaderRoute: typeof LayoutUserNameProjectNameLayoutCollaboratorsImport
      parentRoute: typeof LayoutUserNameProjectNameLayoutImport
    }
    '/_layout/$userName/$projectName/_layout/datasets': {
      id: '/_layout/$userName/$projectName/_layout/datasets'
      path: '/datasets'
      fullPath: '/$userName/$projectName/datasets'
      preLoaderRoute: typeof LayoutUserNameProjectNameLayoutDatasetsImport
      parentRoute: typeof LayoutUserNameProjectNameLayoutImport
    }
    '/_layout/$userName/$projectName/_layout/figures': {
      id: '/_layout/$userName/$projectName/_layout/figures'
      path: '/figures'
      fullPath: '/$userName/$projectName/figures'
      preLoaderRoute: typeof LayoutUserNameProjectNameLayoutFiguresImport
      parentRoute: typeof LayoutUserNameProjectNameLayoutImport
    }
    '/_layout/$userName/$projectName/_layout/files': {
      id: '/_layout/$userName/$projectName/_layout/files'
      path: '/files'
      fullPath: '/$userName/$projectName/files'
      preLoaderRoute: typeof LayoutUserNameProjectNameLayoutFilesImport
      parentRoute: typeof LayoutUserNameProjectNameLayoutImport
    }
    '/_layout/$userName/$projectName/_layout/local': {
      id: '/_layout/$userName/$projectName/_layout/local'
      path: '/local'
      fullPath: '/$userName/$projectName/local'
      preLoaderRoute: typeof LayoutUserNameProjectNameLayoutLocalImport
      parentRoute: typeof LayoutUserNameProjectNameLayoutImport
    }
    '/_layout/$userName/$projectName/_layout/notebooks': {
      id: '/_layout/$userName/$projectName/_layout/notebooks'
      path: '/notebooks'
      fullPath: '/$userName/$projectName/notebooks'
      preLoaderRoute: typeof LayoutUserNameProjectNameLayoutNotebooksImport
      parentRoute: typeof LayoutUserNameProjectNameLayoutImport
    }
    '/_layout/$userName/$projectName/_layout/publications': {
      id: '/_layout/$userName/$projectName/_layout/publications'
      path: '/publications'
      fullPath: '/$userName/$projectName/publications'
      preLoaderRoute: typeof LayoutUserNameProjectNameLayoutPublicationsImport
      parentRoute: typeof LayoutUserNameProjectNameLayoutImport
    }
    '/_layout/$userName/$projectName/_layout/references': {
      id: '/_layout/$userName/$projectName/_layout/references'
      path: '/references'
      fullPath: '/$userName/$projectName/references'
      preLoaderRoute: typeof LayoutUserNameProjectNameLayoutReferencesImport
      parentRoute: typeof LayoutUserNameProjectNameLayoutImport
    }
    '/_layout/$userName/$projectName/_layout/software': {
      id: '/_layout/$userName/$projectName/_layout/software'
      path: '/software'
      fullPath: '/$userName/$projectName/software'
      preLoaderRoute: typeof LayoutUserNameProjectNameLayoutSoftwareImport
      parentRoute: typeof LayoutUserNameProjectNameLayoutImport
    }
    '/_layout/$userName/$projectName/_layout/workflow': {
      id: '/_layout/$userName/$projectName/_layout/workflow'
      path: '/workflow'
      fullPath: '/$userName/$projectName/workflow'
      preLoaderRoute: typeof LayoutUserNameProjectNameLayoutWorkflowImport
      parentRoute: typeof LayoutUserNameProjectNameLayoutImport
    }
    '/_layout/$userName/$projectName/_layout/': {
      id: '/_layout/$userName/$projectName/_layout/'
      path: '/'
      fullPath: '/$userName/$projectName/'
      preLoaderRoute: typeof LayoutUserNameProjectNameLayoutIndexImport
      parentRoute: typeof LayoutUserNameProjectNameLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  LayoutRoute: LayoutRoute.addChildren({
    LayoutAdminRoute,
    LayoutDatasetsRoute,
    LayoutLearnRoute,
    LayoutProjectsRoute,
    LayoutSettingsRoute,
    LayoutIndexRoute,
    LayoutUserNameProjectNameRoute: LayoutUserNameProjectNameRoute.addChildren({
      LayoutUserNameProjectNameLayoutRoute:
        LayoutUserNameProjectNameLayoutRoute.addChildren({
          LayoutUserNameProjectNameLayoutCollaboratorsRoute,
          LayoutUserNameProjectNameLayoutDatasetsRoute,
          LayoutUserNameProjectNameLayoutFiguresRoute,
          LayoutUserNameProjectNameLayoutFilesRoute,
          LayoutUserNameProjectNameLayoutLocalRoute,
          LayoutUserNameProjectNameLayoutNotebooksRoute,
          LayoutUserNameProjectNameLayoutPublicationsRoute,
          LayoutUserNameProjectNameLayoutReferencesRoute,
          LayoutUserNameProjectNameLayoutSoftwareRoute,
          LayoutUserNameProjectNameLayoutWorkflowRoute,
          LayoutUserNameProjectNameLayoutIndexRoute,
        }),
    }),
  }),
  CheckoutRoute,
  LoginRoute,
  RecoverPasswordRoute,
  ResetPasswordRoute,
  ZenodoAuthRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/checkout",
        "/login",
        "/recover-password",
        "/reset-password",
        "/zenodo-auth"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/admin",
        "/_layout/datasets",
        "/_layout/learn",
        "/_layout/projects",
        "/_layout/settings",
        "/_layout/",
        "/_layout/$userName/$projectName"
      ]
    },
    "/checkout": {
      "filePath": "checkout.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/recover-password": {
      "filePath": "recover-password.tsx"
    },
    "/reset-password": {
      "filePath": "reset-password.tsx"
    },
    "/zenodo-auth": {
      "filePath": "zenodo-auth.tsx"
    },
    "/_layout/admin": {
      "filePath": "_layout/admin.tsx",
      "parent": "/_layout"
    },
    "/_layout/datasets": {
      "filePath": "_layout/datasets.tsx",
      "parent": "/_layout"
    },
    "/_layout/learn": {
      "filePath": "_layout/learn.tsx",
      "parent": "/_layout"
    },
    "/_layout/projects": {
      "filePath": "_layout/projects.tsx",
      "parent": "/_layout"
    },
    "/_layout/settings": {
      "filePath": "_layout/settings.tsx",
      "parent": "/_layout"
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/$userName/$projectName": {
      "filePath": "_layout/$userName/$projectName",
      "parent": "/_layout",
      "children": [
        "/_layout/$userName/$projectName/_layout"
      ]
    },
    "/_layout/$userName/$projectName/_layout": {
      "filePath": "_layout/$userName/$projectName/_layout.tsx",
      "parent": "/_layout/$userName/$projectName",
      "children": [
        "/_layout/$userName/$projectName/_layout/collaborators",
        "/_layout/$userName/$projectName/_layout/datasets",
        "/_layout/$userName/$projectName/_layout/figures",
        "/_layout/$userName/$projectName/_layout/files",
        "/_layout/$userName/$projectName/_layout/local",
        "/_layout/$userName/$projectName/_layout/notebooks",
        "/_layout/$userName/$projectName/_layout/publications",
        "/_layout/$userName/$projectName/_layout/references",
        "/_layout/$userName/$projectName/_layout/software",
        "/_layout/$userName/$projectName/_layout/workflow",
        "/_layout/$userName/$projectName/_layout/"
      ]
    },
    "/_layout/$userName/$projectName/_layout/collaborators": {
      "filePath": "_layout/$userName/$projectName/_layout/collaborators.tsx",
      "parent": "/_layout/$userName/$projectName/_layout"
    },
    "/_layout/$userName/$projectName/_layout/datasets": {
      "filePath": "_layout/$userName/$projectName/_layout/datasets.tsx",
      "parent": "/_layout/$userName/$projectName/_layout"
    },
    "/_layout/$userName/$projectName/_layout/figures": {
      "filePath": "_layout/$userName/$projectName/_layout/figures.tsx",
      "parent": "/_layout/$userName/$projectName/_layout"
    },
    "/_layout/$userName/$projectName/_layout/files": {
      "filePath": "_layout/$userName/$projectName/_layout/files.tsx",
      "parent": "/_layout/$userName/$projectName/_layout"
    },
    "/_layout/$userName/$projectName/_layout/local": {
      "filePath": "_layout/$userName/$projectName/_layout/local.tsx",
      "parent": "/_layout/$userName/$projectName/_layout"
    },
    "/_layout/$userName/$projectName/_layout/notebooks": {
      "filePath": "_layout/$userName/$projectName/_layout/notebooks.tsx",
      "parent": "/_layout/$userName/$projectName/_layout"
    },
    "/_layout/$userName/$projectName/_layout/publications": {
      "filePath": "_layout/$userName/$projectName/_layout/publications.tsx",
      "parent": "/_layout/$userName/$projectName/_layout"
    },
    "/_layout/$userName/$projectName/_layout/references": {
      "filePath": "_layout/$userName/$projectName/_layout/references.tsx",
      "parent": "/_layout/$userName/$projectName/_layout"
    },
    "/_layout/$userName/$projectName/_layout/software": {
      "filePath": "_layout/$userName/$projectName/_layout/software.tsx",
      "parent": "/_layout/$userName/$projectName/_layout"
    },
    "/_layout/$userName/$projectName/_layout/workflow": {
      "filePath": "_layout/$userName/$projectName/_layout/workflow.tsx",
      "parent": "/_layout/$userName/$projectName/_layout"
    },
    "/_layout/$userName/$projectName/_layout/": {
      "filePath": "_layout/$userName/$projectName/_layout/index.tsx",
      "parent": "/_layout/$userName/$projectName/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
