/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as ZenodoAuthRouteImport } from './routes/zenodo-auth'
import { Route as ResetPasswordRouteImport } from './routes/reset-password'
import { Route as RecoverPasswordRouteImport } from './routes/recover-password'
import { Route as LoginRouteImport } from './routes/login'
import { Route as CheckoutRouteImport } from './routes/checkout'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as LayoutIndexRouteImport } from './routes/_layout/index'
import { Route as LayoutSettingsRouteImport } from './routes/_layout/settings'
import { Route as LayoutProjectsRouteImport } from './routes/_layout/projects'
import { Route as LayoutOrgsRouteImport } from './routes/_layout/orgs'
import { Route as LayoutLearnRouteImport } from './routes/_layout/learn'
import { Route as LayoutDatasetsRouteImport } from './routes/_layout/datasets'
import { Route as LayoutAdminRouteImport } from './routes/_layout/admin'
import { Route as LayoutAccountNameIndexRouteImport } from './routes/_layout/$accountName/index'
import { Route as LayoutAccountNameProjectNameLayoutRouteImport } from './routes/_layout/$accountName/$projectName/_layout'
import { Route as LayoutAccountNameProjectNameLayoutIndexRouteImport } from './routes/_layout/$accountName/$projectName/_layout/index'
import { Route as LayoutAccountNameProjectNameLayoutSoftwareRouteImport } from './routes/_layout/$accountName/$projectName/_layout/software'
import { Route as LayoutAccountNameProjectNameLayoutReferencesRouteImport } from './routes/_layout/$accountName/$projectName/_layout/references'
import { Route as LayoutAccountNameProjectNameLayoutPublicationsRouteImport } from './routes/_layout/$accountName/$projectName/_layout/publications'
import { Route as LayoutAccountNameProjectNameLayoutPipelineRouteImport } from './routes/_layout/$accountName/$projectName/_layout/pipeline'
import { Route as LayoutAccountNameProjectNameLayoutNotebooksRouteImport } from './routes/_layout/$accountName/$projectName/_layout/notebooks'
import { Route as LayoutAccountNameProjectNameLayoutLocalRouteImport } from './routes/_layout/$accountName/$projectName/_layout/local'
import { Route as LayoutAccountNameProjectNameLayoutFilesRouteImport } from './routes/_layout/$accountName/$projectName/_layout/files'
import { Route as LayoutAccountNameProjectNameLayoutFiguresRouteImport } from './routes/_layout/$accountName/$projectName/_layout/figures'
import { Route as LayoutAccountNameProjectNameLayoutEnvironmentsRouteImport } from './routes/_layout/$accountName/$projectName/_layout/environments'
import { Route as LayoutAccountNameProjectNameLayoutDatasetsRouteImport } from './routes/_layout/$accountName/$projectName/_layout/datasets'
import { Route as LayoutAccountNameProjectNameLayoutCollaboratorsRouteImport } from './routes/_layout/$accountName/$projectName/_layout/collaborators'
import { Route as LayoutAccountNameProjectNameLayoutAppRouteImport } from './routes/_layout/$accountName/$projectName/_layout/app'

const LayoutAccountNameProjectNameRouteImport = createFileRoute(
  '/_layout/$accountName/$projectName',
)()

const ZenodoAuthRoute = ZenodoAuthRouteImport.update({
  id: '/zenodo-auth',
  path: '/zenodo-auth',
  getParentRoute: () => rootRouteImport,
} as any)
const ResetPasswordRoute = ResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const RecoverPasswordRoute = RecoverPasswordRouteImport.update({
  id: '/recover-password',
  path: '/recover-password',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const CheckoutRoute = CheckoutRouteImport.update({
  id: '/checkout',
  path: '/checkout',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutIndexRoute = LayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutSettingsRoute = LayoutSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutProjectsRoute = LayoutProjectsRouteImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutOrgsRoute = LayoutOrgsRouteImport.update({
  id: '/orgs',
  path: '/orgs',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutLearnRoute = LayoutLearnRouteImport.update({
  id: '/learn',
  path: '/learn',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutDatasetsRoute = LayoutDatasetsRouteImport.update({
  id: '/datasets',
  path: '/datasets',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutAdminRoute = LayoutAdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutAccountNameProjectNameRoute =
  LayoutAccountNameProjectNameRouteImport.update({
    id: '/$accountName/$projectName',
    path: '/$accountName/$projectName',
    getParentRoute: () => LayoutRoute,
  } as any)
const LayoutAccountNameIndexRoute = LayoutAccountNameIndexRouteImport.update({
  id: '/$accountName/',
  path: '/$accountName/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutAccountNameProjectNameLayoutRoute =
  LayoutAccountNameProjectNameLayoutRouteImport.update({
    id: '/_layout',
    getParentRoute: () => LayoutAccountNameProjectNameRoute,
  } as any)
const LayoutAccountNameProjectNameLayoutIndexRoute =
  LayoutAccountNameProjectNameLayoutIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LayoutAccountNameProjectNameLayoutRoute,
  } as any)
const LayoutAccountNameProjectNameLayoutSoftwareRoute =
  LayoutAccountNameProjectNameLayoutSoftwareRouteImport.update({
    id: '/software',
    path: '/software',
    getParentRoute: () => LayoutAccountNameProjectNameLayoutRoute,
  } as any)
const LayoutAccountNameProjectNameLayoutReferencesRoute =
  LayoutAccountNameProjectNameLayoutReferencesRouteImport.update({
    id: '/references',
    path: '/references',
    getParentRoute: () => LayoutAccountNameProjectNameLayoutRoute,
  } as any)
const LayoutAccountNameProjectNameLayoutPublicationsRoute =
  LayoutAccountNameProjectNameLayoutPublicationsRouteImport.update({
    id: '/publications',
    path: '/publications',
    getParentRoute: () => LayoutAccountNameProjectNameLayoutRoute,
  } as any)
const LayoutAccountNameProjectNameLayoutPipelineRoute =
  LayoutAccountNameProjectNameLayoutPipelineRouteImport.update({
    id: '/pipeline',
    path: '/pipeline',
    getParentRoute: () => LayoutAccountNameProjectNameLayoutRoute,
  } as any)
const LayoutAccountNameProjectNameLayoutNotebooksRoute =
  LayoutAccountNameProjectNameLayoutNotebooksRouteImport.update({
    id: '/notebooks',
    path: '/notebooks',
    getParentRoute: () => LayoutAccountNameProjectNameLayoutRoute,
  } as any)
const LayoutAccountNameProjectNameLayoutLocalRoute =
  LayoutAccountNameProjectNameLayoutLocalRouteImport.update({
    id: '/local',
    path: '/local',
    getParentRoute: () => LayoutAccountNameProjectNameLayoutRoute,
  } as any)
const LayoutAccountNameProjectNameLayoutFilesRoute =
  LayoutAccountNameProjectNameLayoutFilesRouteImport.update({
    id: '/files',
    path: '/files',
    getParentRoute: () => LayoutAccountNameProjectNameLayoutRoute,
  } as any)
const LayoutAccountNameProjectNameLayoutFiguresRoute =
  LayoutAccountNameProjectNameLayoutFiguresRouteImport.update({
    id: '/figures',
    path: '/figures',
    getParentRoute: () => LayoutAccountNameProjectNameLayoutRoute,
  } as any)
const LayoutAccountNameProjectNameLayoutEnvironmentsRoute =
  LayoutAccountNameProjectNameLayoutEnvironmentsRouteImport.update({
    id: '/environments',
    path: '/environments',
    getParentRoute: () => LayoutAccountNameProjectNameLayoutRoute,
  } as any)
const LayoutAccountNameProjectNameLayoutDatasetsRoute =
  LayoutAccountNameProjectNameLayoutDatasetsRouteImport.update({
    id: '/datasets',
    path: '/datasets',
    getParentRoute: () => LayoutAccountNameProjectNameLayoutRoute,
  } as any)
const LayoutAccountNameProjectNameLayoutCollaboratorsRoute =
  LayoutAccountNameProjectNameLayoutCollaboratorsRouteImport.update({
    id: '/collaborators',
    path: '/collaborators',
    getParentRoute: () => LayoutAccountNameProjectNameLayoutRoute,
  } as any)
const LayoutAccountNameProjectNameLayoutAppRoute =
  LayoutAccountNameProjectNameLayoutAppRouteImport.update({
    id: '/app',
    path: '/app',
    getParentRoute: () => LayoutAccountNameProjectNameLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/checkout': typeof CheckoutRoute
  '/login': typeof LoginRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/zenodo-auth': typeof ZenodoAuthRoute
  '/admin': typeof LayoutAdminRoute
  '/datasets': typeof LayoutDatasetsRoute
  '/learn': typeof LayoutLearnRoute
  '/orgs': typeof LayoutOrgsRoute
  '/projects': typeof LayoutProjectsRoute
  '/settings': typeof LayoutSettingsRoute
  '/': typeof LayoutIndexRoute
  '/$accountName': typeof LayoutAccountNameIndexRoute
  '/$accountName/$projectName': typeof LayoutAccountNameProjectNameLayoutRouteWithChildren
  '/$accountName/$projectName/app': typeof LayoutAccountNameProjectNameLayoutAppRoute
  '/$accountName/$projectName/collaborators': typeof LayoutAccountNameProjectNameLayoutCollaboratorsRoute
  '/$accountName/$projectName/datasets': typeof LayoutAccountNameProjectNameLayoutDatasetsRoute
  '/$accountName/$projectName/environments': typeof LayoutAccountNameProjectNameLayoutEnvironmentsRoute
  '/$accountName/$projectName/figures': typeof LayoutAccountNameProjectNameLayoutFiguresRoute
  '/$accountName/$projectName/files': typeof LayoutAccountNameProjectNameLayoutFilesRoute
  '/$accountName/$projectName/local': typeof LayoutAccountNameProjectNameLayoutLocalRoute
  '/$accountName/$projectName/notebooks': typeof LayoutAccountNameProjectNameLayoutNotebooksRoute
  '/$accountName/$projectName/pipeline': typeof LayoutAccountNameProjectNameLayoutPipelineRoute
  '/$accountName/$projectName/publications': typeof LayoutAccountNameProjectNameLayoutPublicationsRoute
  '/$accountName/$projectName/references': typeof LayoutAccountNameProjectNameLayoutReferencesRoute
  '/$accountName/$projectName/software': typeof LayoutAccountNameProjectNameLayoutSoftwareRoute
  '/$accountName/$projectName/': typeof LayoutAccountNameProjectNameLayoutIndexRoute
}
export interface FileRoutesByTo {
  '/checkout': typeof CheckoutRoute
  '/login': typeof LoginRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/zenodo-auth': typeof ZenodoAuthRoute
  '/admin': typeof LayoutAdminRoute
  '/datasets': typeof LayoutDatasetsRoute
  '/learn': typeof LayoutLearnRoute
  '/orgs': typeof LayoutOrgsRoute
  '/projects': typeof LayoutProjectsRoute
  '/settings': typeof LayoutSettingsRoute
  '/': typeof LayoutIndexRoute
  '/$accountName': typeof LayoutAccountNameIndexRoute
  '/$accountName/$projectName': typeof LayoutAccountNameProjectNameLayoutIndexRoute
  '/$accountName/$projectName/app': typeof LayoutAccountNameProjectNameLayoutAppRoute
  '/$accountName/$projectName/collaborators': typeof LayoutAccountNameProjectNameLayoutCollaboratorsRoute
  '/$accountName/$projectName/datasets': typeof LayoutAccountNameProjectNameLayoutDatasetsRoute
  '/$accountName/$projectName/environments': typeof LayoutAccountNameProjectNameLayoutEnvironmentsRoute
  '/$accountName/$projectName/figures': typeof LayoutAccountNameProjectNameLayoutFiguresRoute
  '/$accountName/$projectName/files': typeof LayoutAccountNameProjectNameLayoutFilesRoute
  '/$accountName/$projectName/local': typeof LayoutAccountNameProjectNameLayoutLocalRoute
  '/$accountName/$projectName/notebooks': typeof LayoutAccountNameProjectNameLayoutNotebooksRoute
  '/$accountName/$projectName/pipeline': typeof LayoutAccountNameProjectNameLayoutPipelineRoute
  '/$accountName/$projectName/publications': typeof LayoutAccountNameProjectNameLayoutPublicationsRoute
  '/$accountName/$projectName/references': typeof LayoutAccountNameProjectNameLayoutReferencesRoute
  '/$accountName/$projectName/software': typeof LayoutAccountNameProjectNameLayoutSoftwareRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_layout': typeof LayoutRouteWithChildren
  '/checkout': typeof CheckoutRoute
  '/login': typeof LoginRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/zenodo-auth': typeof ZenodoAuthRoute
  '/_layout/admin': typeof LayoutAdminRoute
  '/_layout/datasets': typeof LayoutDatasetsRoute
  '/_layout/learn': typeof LayoutLearnRoute
  '/_layout/orgs': typeof LayoutOrgsRoute
  '/_layout/projects': typeof LayoutProjectsRoute
  '/_layout/settings': typeof LayoutSettingsRoute
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/$accountName/': typeof LayoutAccountNameIndexRoute
  '/_layout/$accountName/$projectName': typeof LayoutAccountNameProjectNameRouteWithChildren
  '/_layout/$accountName/$projectName/_layout': typeof LayoutAccountNameProjectNameLayoutRouteWithChildren
  '/_layout/$accountName/$projectName/_layout/app': typeof LayoutAccountNameProjectNameLayoutAppRoute
  '/_layout/$accountName/$projectName/_layout/collaborators': typeof LayoutAccountNameProjectNameLayoutCollaboratorsRoute
  '/_layout/$accountName/$projectName/_layout/datasets': typeof LayoutAccountNameProjectNameLayoutDatasetsRoute
  '/_layout/$accountName/$projectName/_layout/environments': typeof LayoutAccountNameProjectNameLayoutEnvironmentsRoute
  '/_layout/$accountName/$projectName/_layout/figures': typeof LayoutAccountNameProjectNameLayoutFiguresRoute
  '/_layout/$accountName/$projectName/_layout/files': typeof LayoutAccountNameProjectNameLayoutFilesRoute
  '/_layout/$accountName/$projectName/_layout/local': typeof LayoutAccountNameProjectNameLayoutLocalRoute
  '/_layout/$accountName/$projectName/_layout/notebooks': typeof LayoutAccountNameProjectNameLayoutNotebooksRoute
  '/_layout/$accountName/$projectName/_layout/pipeline': typeof LayoutAccountNameProjectNameLayoutPipelineRoute
  '/_layout/$accountName/$projectName/_layout/publications': typeof LayoutAccountNameProjectNameLayoutPublicationsRoute
  '/_layout/$accountName/$projectName/_layout/references': typeof LayoutAccountNameProjectNameLayoutReferencesRoute
  '/_layout/$accountName/$projectName/_layout/software': typeof LayoutAccountNameProjectNameLayoutSoftwareRoute
  '/_layout/$accountName/$projectName/_layout/': typeof LayoutAccountNameProjectNameLayoutIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/checkout'
    | '/login'
    | '/recover-password'
    | '/reset-password'
    | '/zenodo-auth'
    | '/admin'
    | '/datasets'
    | '/learn'
    | '/orgs'
    | '/projects'
    | '/settings'
    | '/'
    | '/$accountName'
    | '/$accountName/$projectName'
    | '/$accountName/$projectName/app'
    | '/$accountName/$projectName/collaborators'
    | '/$accountName/$projectName/datasets'
    | '/$accountName/$projectName/environments'
    | '/$accountName/$projectName/figures'
    | '/$accountName/$projectName/files'
    | '/$accountName/$projectName/local'
    | '/$accountName/$projectName/notebooks'
    | '/$accountName/$projectName/pipeline'
    | '/$accountName/$projectName/publications'
    | '/$accountName/$projectName/references'
    | '/$accountName/$projectName/software'
    | '/$accountName/$projectName/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/checkout'
    | '/login'
    | '/recover-password'
    | '/reset-password'
    | '/zenodo-auth'
    | '/admin'
    | '/datasets'
    | '/learn'
    | '/orgs'
    | '/projects'
    | '/settings'
    | '/'
    | '/$accountName'
    | '/$accountName/$projectName'
    | '/$accountName/$projectName/app'
    | '/$accountName/$projectName/collaborators'
    | '/$accountName/$projectName/datasets'
    | '/$accountName/$projectName/environments'
    | '/$accountName/$projectName/figures'
    | '/$accountName/$projectName/files'
    | '/$accountName/$projectName/local'
    | '/$accountName/$projectName/notebooks'
    | '/$accountName/$projectName/pipeline'
    | '/$accountName/$projectName/publications'
    | '/$accountName/$projectName/references'
    | '/$accountName/$projectName/software'
  id:
    | '__root__'
    | '/_layout'
    | '/checkout'
    | '/login'
    | '/recover-password'
    | '/reset-password'
    | '/zenodo-auth'
    | '/_layout/admin'
    | '/_layout/datasets'
    | '/_layout/learn'
    | '/_layout/orgs'
    | '/_layout/projects'
    | '/_layout/settings'
    | '/_layout/'
    | '/_layout/$accountName/'
    | '/_layout/$accountName/$projectName'
    | '/_layout/$accountName/$projectName/_layout'
    | '/_layout/$accountName/$projectName/_layout/app'
    | '/_layout/$accountName/$projectName/_layout/collaborators'
    | '/_layout/$accountName/$projectName/_layout/datasets'
    | '/_layout/$accountName/$projectName/_layout/environments'
    | '/_layout/$accountName/$projectName/_layout/figures'
    | '/_layout/$accountName/$projectName/_layout/files'
    | '/_layout/$accountName/$projectName/_layout/local'
    | '/_layout/$accountName/$projectName/_layout/notebooks'
    | '/_layout/$accountName/$projectName/_layout/pipeline'
    | '/_layout/$accountName/$projectName/_layout/publications'
    | '/_layout/$accountName/$projectName/_layout/references'
    | '/_layout/$accountName/$projectName/_layout/software'
    | '/_layout/$accountName/$projectName/_layout/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  CheckoutRoute: typeof CheckoutRoute
  LoginRoute: typeof LoginRoute
  RecoverPasswordRoute: typeof RecoverPasswordRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  ZenodoAuthRoute: typeof ZenodoAuthRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/zenodo-auth': {
      id: '/zenodo-auth'
      path: '/zenodo-auth'
      fullPath: '/zenodo-auth'
      preLoaderRoute: typeof ZenodoAuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/recover-password': {
      id: '/recover-password'
      path: '/recover-password'
      fullPath: '/recover-password'
      preLoaderRoute: typeof RecoverPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/checkout': {
      id: '/checkout'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof CheckoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/settings': {
      id: '/_layout/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof LayoutSettingsRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/projects': {
      id: '/_layout/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof LayoutProjectsRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/orgs': {
      id: '/_layout/orgs'
      path: '/orgs'
      fullPath: '/orgs'
      preLoaderRoute: typeof LayoutOrgsRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/learn': {
      id: '/_layout/learn'
      path: '/learn'
      fullPath: '/learn'
      preLoaderRoute: typeof LayoutLearnRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/datasets': {
      id: '/_layout/datasets'
      path: '/datasets'
      fullPath: '/datasets'
      preLoaderRoute: typeof LayoutDatasetsRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/admin': {
      id: '/_layout/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof LayoutAdminRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/$accountName/$projectName': {
      id: '/_layout/$accountName/$projectName'
      path: '/$accountName/$projectName'
      fullPath: '/$accountName/$projectName'
      preLoaderRoute: typeof LayoutAccountNameProjectNameRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/$accountName/': {
      id: '/_layout/$accountName/'
      path: '/$accountName'
      fullPath: '/$accountName'
      preLoaderRoute: typeof LayoutAccountNameIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/$accountName/$projectName/_layout': {
      id: '/_layout/$accountName/$projectName/_layout'
      path: '/$accountName/$projectName'
      fullPath: '/$accountName/$projectName'
      preLoaderRoute: typeof LayoutAccountNameProjectNameLayoutRouteImport
      parentRoute: typeof LayoutAccountNameProjectNameRoute
    }
    '/_layout/$accountName/$projectName/_layout/': {
      id: '/_layout/$accountName/$projectName/_layout/'
      path: '/'
      fullPath: '/$accountName/$projectName/'
      preLoaderRoute: typeof LayoutAccountNameProjectNameLayoutIndexRouteImport
      parentRoute: typeof LayoutAccountNameProjectNameLayoutRoute
    }
    '/_layout/$accountName/$projectName/_layout/software': {
      id: '/_layout/$accountName/$projectName/_layout/software'
      path: '/software'
      fullPath: '/$accountName/$projectName/software'
      preLoaderRoute: typeof LayoutAccountNameProjectNameLayoutSoftwareRouteImport
      parentRoute: typeof LayoutAccountNameProjectNameLayoutRoute
    }
    '/_layout/$accountName/$projectName/_layout/references': {
      id: '/_layout/$accountName/$projectName/_layout/references'
      path: '/references'
      fullPath: '/$accountName/$projectName/references'
      preLoaderRoute: typeof LayoutAccountNameProjectNameLayoutReferencesRouteImport
      parentRoute: typeof LayoutAccountNameProjectNameLayoutRoute
    }
    '/_layout/$accountName/$projectName/_layout/publications': {
      id: '/_layout/$accountName/$projectName/_layout/publications'
      path: '/publications'
      fullPath: '/$accountName/$projectName/publications'
      preLoaderRoute: typeof LayoutAccountNameProjectNameLayoutPublicationsRouteImport
      parentRoute: typeof LayoutAccountNameProjectNameLayoutRoute
    }
    '/_layout/$accountName/$projectName/_layout/pipeline': {
      id: '/_layout/$accountName/$projectName/_layout/pipeline'
      path: '/pipeline'
      fullPath: '/$accountName/$projectName/pipeline'
      preLoaderRoute: typeof LayoutAccountNameProjectNameLayoutPipelineRouteImport
      parentRoute: typeof LayoutAccountNameProjectNameLayoutRoute
    }
    '/_layout/$accountName/$projectName/_layout/notebooks': {
      id: '/_layout/$accountName/$projectName/_layout/notebooks'
      path: '/notebooks'
      fullPath: '/$accountName/$projectName/notebooks'
      preLoaderRoute: typeof LayoutAccountNameProjectNameLayoutNotebooksRouteImport
      parentRoute: typeof LayoutAccountNameProjectNameLayoutRoute
    }
    '/_layout/$accountName/$projectName/_layout/local': {
      id: '/_layout/$accountName/$projectName/_layout/local'
      path: '/local'
      fullPath: '/$accountName/$projectName/local'
      preLoaderRoute: typeof LayoutAccountNameProjectNameLayoutLocalRouteImport
      parentRoute: typeof LayoutAccountNameProjectNameLayoutRoute
    }
    '/_layout/$accountName/$projectName/_layout/files': {
      id: '/_layout/$accountName/$projectName/_layout/files'
      path: '/files'
      fullPath: '/$accountName/$projectName/files'
      preLoaderRoute: typeof LayoutAccountNameProjectNameLayoutFilesRouteImport
      parentRoute: typeof LayoutAccountNameProjectNameLayoutRoute
    }
    '/_layout/$accountName/$projectName/_layout/figures': {
      id: '/_layout/$accountName/$projectName/_layout/figures'
      path: '/figures'
      fullPath: '/$accountName/$projectName/figures'
      preLoaderRoute: typeof LayoutAccountNameProjectNameLayoutFiguresRouteImport
      parentRoute: typeof LayoutAccountNameProjectNameLayoutRoute
    }
    '/_layout/$accountName/$projectName/_layout/environments': {
      id: '/_layout/$accountName/$projectName/_layout/environments'
      path: '/environments'
      fullPath: '/$accountName/$projectName/environments'
      preLoaderRoute: typeof LayoutAccountNameProjectNameLayoutEnvironmentsRouteImport
      parentRoute: typeof LayoutAccountNameProjectNameLayoutRoute
    }
    '/_layout/$accountName/$projectName/_layout/datasets': {
      id: '/_layout/$accountName/$projectName/_layout/datasets'
      path: '/datasets'
      fullPath: '/$accountName/$projectName/datasets'
      preLoaderRoute: typeof LayoutAccountNameProjectNameLayoutDatasetsRouteImport
      parentRoute: typeof LayoutAccountNameProjectNameLayoutRoute
    }
    '/_layout/$accountName/$projectName/_layout/collaborators': {
      id: '/_layout/$accountName/$projectName/_layout/collaborators'
      path: '/collaborators'
      fullPath: '/$accountName/$projectName/collaborators'
      preLoaderRoute: typeof LayoutAccountNameProjectNameLayoutCollaboratorsRouteImport
      parentRoute: typeof LayoutAccountNameProjectNameLayoutRoute
    }
    '/_layout/$accountName/$projectName/_layout/app': {
      id: '/_layout/$accountName/$projectName/_layout/app'
      path: '/app'
      fullPath: '/$accountName/$projectName/app'
      preLoaderRoute: typeof LayoutAccountNameProjectNameLayoutAppRouteImport
      parentRoute: typeof LayoutAccountNameProjectNameLayoutRoute
    }
  }
}

interface LayoutAccountNameProjectNameLayoutRouteChildren {
  LayoutAccountNameProjectNameLayoutAppRoute: typeof LayoutAccountNameProjectNameLayoutAppRoute
  LayoutAccountNameProjectNameLayoutCollaboratorsRoute: typeof LayoutAccountNameProjectNameLayoutCollaboratorsRoute
  LayoutAccountNameProjectNameLayoutDatasetsRoute: typeof LayoutAccountNameProjectNameLayoutDatasetsRoute
  LayoutAccountNameProjectNameLayoutEnvironmentsRoute: typeof LayoutAccountNameProjectNameLayoutEnvironmentsRoute
  LayoutAccountNameProjectNameLayoutFiguresRoute: typeof LayoutAccountNameProjectNameLayoutFiguresRoute
  LayoutAccountNameProjectNameLayoutFilesRoute: typeof LayoutAccountNameProjectNameLayoutFilesRoute
  LayoutAccountNameProjectNameLayoutLocalRoute: typeof LayoutAccountNameProjectNameLayoutLocalRoute
  LayoutAccountNameProjectNameLayoutNotebooksRoute: typeof LayoutAccountNameProjectNameLayoutNotebooksRoute
  LayoutAccountNameProjectNameLayoutPipelineRoute: typeof LayoutAccountNameProjectNameLayoutPipelineRoute
  LayoutAccountNameProjectNameLayoutPublicationsRoute: typeof LayoutAccountNameProjectNameLayoutPublicationsRoute
  LayoutAccountNameProjectNameLayoutReferencesRoute: typeof LayoutAccountNameProjectNameLayoutReferencesRoute
  LayoutAccountNameProjectNameLayoutSoftwareRoute: typeof LayoutAccountNameProjectNameLayoutSoftwareRoute
  LayoutAccountNameProjectNameLayoutIndexRoute: typeof LayoutAccountNameProjectNameLayoutIndexRoute
}

const LayoutAccountNameProjectNameLayoutRouteChildren: LayoutAccountNameProjectNameLayoutRouteChildren =
  {
    LayoutAccountNameProjectNameLayoutAppRoute:
      LayoutAccountNameProjectNameLayoutAppRoute,
    LayoutAccountNameProjectNameLayoutCollaboratorsRoute:
      LayoutAccountNameProjectNameLayoutCollaboratorsRoute,
    LayoutAccountNameProjectNameLayoutDatasetsRoute:
      LayoutAccountNameProjectNameLayoutDatasetsRoute,
    LayoutAccountNameProjectNameLayoutEnvironmentsRoute:
      LayoutAccountNameProjectNameLayoutEnvironmentsRoute,
    LayoutAccountNameProjectNameLayoutFiguresRoute:
      LayoutAccountNameProjectNameLayoutFiguresRoute,
    LayoutAccountNameProjectNameLayoutFilesRoute:
      LayoutAccountNameProjectNameLayoutFilesRoute,
    LayoutAccountNameProjectNameLayoutLocalRoute:
      LayoutAccountNameProjectNameLayoutLocalRoute,
    LayoutAccountNameProjectNameLayoutNotebooksRoute:
      LayoutAccountNameProjectNameLayoutNotebooksRoute,
    LayoutAccountNameProjectNameLayoutPipelineRoute:
      LayoutAccountNameProjectNameLayoutPipelineRoute,
    LayoutAccountNameProjectNameLayoutPublicationsRoute:
      LayoutAccountNameProjectNameLayoutPublicationsRoute,
    LayoutAccountNameProjectNameLayoutReferencesRoute:
      LayoutAccountNameProjectNameLayoutReferencesRoute,
    LayoutAccountNameProjectNameLayoutSoftwareRoute:
      LayoutAccountNameProjectNameLayoutSoftwareRoute,
    LayoutAccountNameProjectNameLayoutIndexRoute:
      LayoutAccountNameProjectNameLayoutIndexRoute,
  }

const LayoutAccountNameProjectNameLayoutRouteWithChildren =
  LayoutAccountNameProjectNameLayoutRoute._addFileChildren(
    LayoutAccountNameProjectNameLayoutRouteChildren,
  )

interface LayoutAccountNameProjectNameRouteChildren {
  LayoutAccountNameProjectNameLayoutRoute: typeof LayoutAccountNameProjectNameLayoutRouteWithChildren
}

const LayoutAccountNameProjectNameRouteChildren: LayoutAccountNameProjectNameRouteChildren =
  {
    LayoutAccountNameProjectNameLayoutRoute:
      LayoutAccountNameProjectNameLayoutRouteWithChildren,
  }

const LayoutAccountNameProjectNameRouteWithChildren =
  LayoutAccountNameProjectNameRoute._addFileChildren(
    LayoutAccountNameProjectNameRouteChildren,
  )

interface LayoutRouteChildren {
  LayoutAdminRoute: typeof LayoutAdminRoute
  LayoutDatasetsRoute: typeof LayoutDatasetsRoute
  LayoutLearnRoute: typeof LayoutLearnRoute
  LayoutOrgsRoute: typeof LayoutOrgsRoute
  LayoutProjectsRoute: typeof LayoutProjectsRoute
  LayoutSettingsRoute: typeof LayoutSettingsRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutAccountNameIndexRoute: typeof LayoutAccountNameIndexRoute
  LayoutAccountNameProjectNameRoute: typeof LayoutAccountNameProjectNameRouteWithChildren
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutAdminRoute: LayoutAdminRoute,
  LayoutDatasetsRoute: LayoutDatasetsRoute,
  LayoutLearnRoute: LayoutLearnRoute,
  LayoutOrgsRoute: LayoutOrgsRoute,
  LayoutProjectsRoute: LayoutProjectsRoute,
  LayoutSettingsRoute: LayoutSettingsRoute,
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutAccountNameIndexRoute: LayoutAccountNameIndexRoute,
  LayoutAccountNameProjectNameRoute:
    LayoutAccountNameProjectNameRouteWithChildren,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  CheckoutRoute: CheckoutRoute,
  LoginRoute: LoginRoute,
  RecoverPasswordRoute: RecoverPasswordRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  ZenodoAuthRoute: ZenodoAuthRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
