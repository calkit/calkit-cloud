/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as ResetPasswordImport } from './routes/reset-password'
import { Route as RecoverPasswordImport } from './routes/recover-password'
import { Route as LoginImport } from './routes/login'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutSettingsImport } from './routes/_layout/settings'
import { Route as LayoutBrowseImport } from './routes/_layout/browse'
import { Route as LayoutAdminImport } from './routes/_layout/admin'
import { Route as LayoutUserNameProjectNameLayoutImport } from './routes/_layout/$userName/$projectName/_layout'
import { Route as LayoutUserNameProjectNameLayoutIndexImport } from './routes/_layout/$userName/$projectName/_layout/index'
import { Route as LayoutUserNameProjectNameLayoutQuestionsImport } from './routes/_layout/$userName/$projectName/_layout/questions'
import { Route as LayoutUserNameProjectNameLayoutFiguresImport } from './routes/_layout/$userName/$projectName/_layout/figures'
import { Route as LayoutUserNameProjectNameLayoutDataImport } from './routes/_layout/$userName/$projectName/_layout/data'

// Create Virtual Routes

const LayoutUserNameProjectNameImport = createFileRoute(
  '/_layout/$userName/$projectName',
)()

// Create/Update Routes

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const ResetPasswordRoute = ResetPasswordImport.update({
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const RecoverPasswordRoute = RecoverPasswordImport.update({
  path: '/recover-password',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSettingsRoute = LayoutSettingsImport.update({
  path: '/settings',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutBrowseRoute = LayoutBrowseImport.update({
  path: '/browse',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAdminRoute = LayoutAdminImport.update({
  path: '/admin',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutUserNameProjectNameRoute = LayoutUserNameProjectNameImport.update({
  path: '/$userName/$projectName',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutUserNameProjectNameLayoutRoute =
  LayoutUserNameProjectNameLayoutImport.update({
    id: '/_layout',
    getParentRoute: () => LayoutUserNameProjectNameRoute,
  } as any)

const LayoutUserNameProjectNameLayoutIndexRoute =
  LayoutUserNameProjectNameLayoutIndexImport.update({
    path: '/',
    getParentRoute: () => LayoutUserNameProjectNameLayoutRoute,
  } as any)

const LayoutUserNameProjectNameLayoutQuestionsRoute =
  LayoutUserNameProjectNameLayoutQuestionsImport.update({
    path: '/questions',
    getParentRoute: () => LayoutUserNameProjectNameLayoutRoute,
  } as any)

const LayoutUserNameProjectNameLayoutFiguresRoute =
  LayoutUserNameProjectNameLayoutFiguresImport.update({
    path: '/figures',
    getParentRoute: () => LayoutUserNameProjectNameLayoutRoute,
  } as any)

const LayoutUserNameProjectNameLayoutDataRoute =
  LayoutUserNameProjectNameLayoutDataImport.update({
    path: '/data',
    getParentRoute: () => LayoutUserNameProjectNameLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/recover-password': {
      id: '/recover-password'
      path: '/recover-password'
      fullPath: '/recover-password'
      preLoaderRoute: typeof RecoverPasswordImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/_layout/admin': {
      id: '/_layout/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof LayoutAdminImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/browse': {
      id: '/_layout/browse'
      path: '/browse'
      fullPath: '/browse'
      preLoaderRoute: typeof LayoutBrowseImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/settings': {
      id: '/_layout/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof LayoutSettingsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/$userName/$projectName': {
      id: '/_layout/$userName/$projectName'
      path: '/$userName/$projectName'
      fullPath: '/$userName/$projectName'
      preLoaderRoute: typeof LayoutUserNameProjectNameImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/$userName/$projectName/_layout': {
      id: '/_layout/$userName/$projectName/_layout'
      path: '/$userName/$projectName'
      fullPath: '/$userName/$projectName'
      preLoaderRoute: typeof LayoutUserNameProjectNameLayoutImport
      parentRoute: typeof LayoutUserNameProjectNameRoute
    }
    '/_layout/$userName/$projectName/_layout/data': {
      id: '/_layout/$userName/$projectName/_layout/data'
      path: '/data'
      fullPath: '/$userName/$projectName/data'
      preLoaderRoute: typeof LayoutUserNameProjectNameLayoutDataImport
      parentRoute: typeof LayoutUserNameProjectNameLayoutImport
    }
    '/_layout/$userName/$projectName/_layout/figures': {
      id: '/_layout/$userName/$projectName/_layout/figures'
      path: '/figures'
      fullPath: '/$userName/$projectName/figures'
      preLoaderRoute: typeof LayoutUserNameProjectNameLayoutFiguresImport
      parentRoute: typeof LayoutUserNameProjectNameLayoutImport
    }
    '/_layout/$userName/$projectName/_layout/questions': {
      id: '/_layout/$userName/$projectName/_layout/questions'
      path: '/questions'
      fullPath: '/$userName/$projectName/questions'
      preLoaderRoute: typeof LayoutUserNameProjectNameLayoutQuestionsImport
      parentRoute: typeof LayoutUserNameProjectNameLayoutImport
    }
    '/_layout/$userName/$projectName/_layout/': {
      id: '/_layout/$userName/$projectName/_layout/'
      path: '/'
      fullPath: '/$userName/$projectName/'
      preLoaderRoute: typeof LayoutUserNameProjectNameLayoutIndexImport
      parentRoute: typeof LayoutUserNameProjectNameLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  LayoutRoute: LayoutRoute.addChildren({
    LayoutAdminRoute,
    LayoutBrowseRoute,
    LayoutSettingsRoute,
    LayoutIndexRoute,
    LayoutUserNameProjectNameRoute: LayoutUserNameProjectNameRoute.addChildren({
      LayoutUserNameProjectNameLayoutRoute:
        LayoutUserNameProjectNameLayoutRoute.addChildren({
          LayoutUserNameProjectNameLayoutDataRoute,
          LayoutUserNameProjectNameLayoutFiguresRoute,
          LayoutUserNameProjectNameLayoutQuestionsRoute,
          LayoutUserNameProjectNameLayoutIndexRoute,
        }),
    }),
  }),
  LoginRoute,
  RecoverPasswordRoute,
  ResetPasswordRoute,
  SignupRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/login",
        "/recover-password",
        "/reset-password",
        "/signup"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/admin",
        "/_layout/browse",
        "/_layout/settings",
        "/_layout/",
        "/_layout/$userName/$projectName"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/recover-password": {
      "filePath": "recover-password.tsx"
    },
    "/reset-password": {
      "filePath": "reset-password.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/_layout/admin": {
      "filePath": "_layout/admin.tsx",
      "parent": "/_layout"
    },
    "/_layout/browse": {
      "filePath": "_layout/browse.tsx",
      "parent": "/_layout"
    },
    "/_layout/settings": {
      "filePath": "_layout/settings.tsx",
      "parent": "/_layout"
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/$userName/$projectName": {
      "filePath": "_layout/$userName/$projectName",
      "parent": "/_layout",
      "children": [
        "/_layout/$userName/$projectName/_layout"
      ]
    },
    "/_layout/$userName/$projectName/_layout": {
      "filePath": "_layout/$userName/$projectName/_layout.tsx",
      "parent": "/_layout/$userName/$projectName",
      "children": [
        "/_layout/$userName/$projectName/_layout/data",
        "/_layout/$userName/$projectName/_layout/figures",
        "/_layout/$userName/$projectName/_layout/questions",
        "/_layout/$userName/$projectName/_layout/"
      ]
    },
    "/_layout/$userName/$projectName/_layout/data": {
      "filePath": "_layout/$userName/$projectName/_layout/data.tsx",
      "parent": "/_layout/$userName/$projectName/_layout"
    },
    "/_layout/$userName/$projectName/_layout/figures": {
      "filePath": "_layout/$userName/$projectName/_layout/figures.tsx",
      "parent": "/_layout/$userName/$projectName/_layout"
    },
    "/_layout/$userName/$projectName/_layout/questions": {
      "filePath": "_layout/$userName/$projectName/_layout/questions.tsx",
      "parent": "/_layout/$userName/$projectName/_layout"
    },
    "/_layout/$userName/$projectName/_layout/": {
      "filePath": "_layout/$userName/$projectName/_layout/index.tsx",
      "parent": "/_layout/$userName/$projectName/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
