services:
  proxy:
    image: traefik:3.0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "80:80"
      - "8090:8080"
    # Duplicate the command from docker-compose.yml to add --api.insecure=true
    command:
      # Enable Docker in Traefik, so that it reads labels from Docker services
      - --providers.docker
      # Add a constraint to only use services with the label for this stack
      - --providers.docker.constraints=Label(`traefik.constraint-label`, `traefik-public`)
      # Do not expose all Docker services, only the ones explicitly exposed
      - --providers.docker.exposedbydefault=false
      # Create an entrypoint "http" listening on port 80
      - --entrypoints.http.address=:80
      # Create an entrypoint "https" listening on port 443
      - --entrypoints.https.address=:443
      # Enable the access log, with HTTP requests
      - --accesslog
      # Enable the Traefik log, for configurations and errors
      - --log
      # Enable debug logging for local development
      - --log.level=DEBUG
      # Enable the Dashboard and API
      - --api
      # Enable the Dashboard and API in insecure mode for local development
      - --api.insecure=true
    labels:
      # Enable Traefik for this service, to make it available in the public network
      - traefik.enable=true
      - traefik.constraint-label=traefik-public
      # Dummy https-redirect middleware that doesn't really redirect, only to
      # allow running it locally
      - traefik.http.middlewares.https-redirect.contenttype.autodetect=false
    networks:
      - traefik-public
      - default

  db:
    restart: "no"
    env_file:
      - .env
    ports:
      - "5433:5432"

  adminer:
    restart: "no"
    ports:
      - "8080:8080"

  backend:
    restart: "no"
    env_file:
      - .env
    ports:
      - "8888:8888"
    volumes:
      - ./backend/:/app
    build:
      context: ./backend
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
    # command: sleep infinity  # Infinite loop to keep container alive doing nothing
    command: /start-reload.sh
    environment:
      SMTP_HOST: "mailcatcher"
      SMTP_PORT: "1025"
      SMTP_TLS: "false"
      EMAILS_FROM_EMAIL: "noreply@example.com"

  mailcatcher:
    image: schickling/mailcatcher
    ports:
      - "1080:1080"
      - "1025:1025"

  frontend:
    restart: "no"
    build:
      context: ./frontend
      args:
        - VITE_API_URL=http://api.${DOMAIN?Variable not set}
        - VITE_STRIPE_PUBLISHABLE_KEY=${VITE_STRIPE_PUBLISHABLE_KEY?Variable not set}
        - VITE_MIXPANEL_TOKEN=${VITE_MIXPANEL_TOKEN?Variable not set}
        - NODE_ENV=development

  minio:
    image: quay.io/minio/minio
    command: server /data --console-address ":9001"
    restart: always
    networks:
      - traefik-public
      - default
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - 'minio-data:/data'
    environment:
      - MINIO_ROOT_USER=root
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD?Variable not set}
      - MINIO_DEFAULT_BUCKETS=data
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.constraint-label=traefik-public
      - traefik.http.routers.${STACK_NAME?Variable not set}-minio-http.rule=Host(`objects.${DOMAIN?Variable not set}`)
      - traefik.http.routers.${STACK_NAME?Variable not set}-minio-http.entrypoints=http
      - traefik.http.routers.${STACK_NAME?Variable not set}-minio-http.middlewares=https-redirect
      - traefik.http.routers.${STACK_NAME?Variable not set}-minio-https.rule=Host(`objects.${DOMAIN?Variable not set}`)
      - traefik.http.routers.${STACK_NAME?Variable not set}-minio-https.entrypoints=https
      - traefik.http.routers.${STACK_NAME?Variable not set}-minio-https.tls=true
      - traefik.http.routers.${STACK_NAME?Variable not set}-minio-https.tls.certresolver=le
      - traefik.http.services.${STACK_NAME?Variable not set}-minio.loadbalancer.server.port=9000

volumes:
  minio-data:
    driver: local

networks:
  traefik-public:
    # For local dev, don't expect an external Traefik network
    external: false
